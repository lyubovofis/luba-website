// –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø CRM - –ß–ê–°–¢–ò–ù–ê 1/3
// –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å —Å—Ç–∞–¥—ñ–π –º—ñ–∂ –∫–≤—ñ–∑–æ–º —Ç–∞ CRM

const fs = require('fs');
const path = require('path');

console.log('üîß –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è CRM —Å—Ç–∞–¥—ñ–π...\n');

const crmPath = path.join(__dirname, 'crm', 'index.html');
let content = fs.readFileSync(crmPath, 'utf8');

// 1. –í–∏–ø—Ä–∞–≤–∏—Ç–∏ —Å—Ç–∞–¥—ñ—ó –∫–æ–ª–æ–Ω–æ–∫ –≤–æ—Ä–æ–Ω–∫–∏
content = content.replace(
    /data-stage="new"/g,
    'data-stage="quiz_new"'
);

content = content.replace(
    /const stages = \['new', 'consultation', 'paid'\];/g,
    `const stages = ['quiz_new', 'consultation', 'paid'];`
);

// 2. –î–æ–¥–∞—Ç–∏ console.log –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏ drag & drop
const dragDropSection = `                    const leadId = parseInt(draggedElement.dataset.id);
                    const newStage = column.dataset.stage;
                    const lead = allLeads.find(l => l.id == leadId);
                    
                    console.log('üîÑ Drag & Drop:', { leadId, newStage, currentStage: lead?.stage });`;

content = content.replace(
    /const leadId = parseInt\(draggedElement\.dataset\.id\);\s*const newStage = column\.dataset\.stage;\s*const lead = allLeads\.find\(l => l\.id == leadId\);/,
    dragDropSection
);

// 3. –î–æ–¥–∞—Ç–∏ then() –ø—ñ—Å–ª—è update –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–æ–º–∏–ª–æ–∫
content = content.replace(
    /(await supabase\.from\('quiz_leads'\)\.update\(\{[\s\S]*?\}\)\.eq\('id', leadId\);)/g,
    `const { data, error } = $1
                        
                        if (error) {
                            console.error('‚ùå Update error:', error);
                            alert('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ' + error.message);
                            await loadData(); // Reload to revert visual change
                            return;
                        }
                        
                        console.log('‚úÖ Updated successfully');`
);

fs.writeFileSync(crmPath, content);

console.log('‚úÖ –ß–∞—Å—Ç–∏–Ω–∞ 1/3 –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
console.log('   - –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Ç–∞–¥—ñ—ó –≤–æ—Ä–æ–Ω–∫–∏');
console.log('   - –î–æ–¥–∞–Ω–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è');
console.log('   - –î–æ–¥–∞–Ω–æ –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫\n');
