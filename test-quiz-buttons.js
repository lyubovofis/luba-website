const { chromium } = require('playwright');

async function testQuizButtons() {
    console.log('üß™ –¢–ï–°–¢ –ö–ù–û–ü–û–ö –í –ö–í–ò–ó–ï\n');
    
    const browser = await chromium.launch({ 
        headless: false, 
        slowMo: 1000 
    });
    
    const page = await browser.newPage();
    
    try {
        console.log('1Ô∏è‚É£ –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–≤–∏–∑...');
        await page.goto('http://localhost:8000/quiz-test/', {
            waitUntil: 'networkidle'
        });
        console.log('   ‚úÖ –ö–≤–∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω\n');
        
        await page.waitForTimeout(2000);
        
        // –í–æ–ø—Ä–æ—Å 1
        console.log('2Ô∏è‚É£ –¢–µ—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ 1...');
        const options = await page.locator('.option-card').all();
        console.log(`   –ù–∞–π–¥–µ–Ω–æ –æ–ø—Ü–∏–π: ${options.length}`);
        
        if (options.length > 0) {
            await options[0].click();
            console.log('   ‚úÖ –û–ø—Ü–∏—è –∫–ª–∏–∫–∞–µ—Ç—Å—è');
            await page.waitForTimeout(500);
            
            const btn1 = page.locator('#btn1');
            const isVisible = await btn1.isVisible();
            const isEnabled = await btn1.isEnabled();
            
            console.log(`   –ö–Ω–æ–ø–∫–∞ #btn1 –≤–∏–¥–Ω–∞: ${isVisible ? '‚úÖ' : '‚ùå'}`);
            console.log(`   –ö–Ω–æ–ø–∫–∞ #btn1 –∞–∫—Ç–∏–≤–Ω–∞: ${isEnabled ? '‚úÖ' : '‚ùå'}`);
            
            if (isVisible && isEnabled) {
                console.log('   üñ±Ô∏è –ü—Ä–æ–±—É–µ–º –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É...');
                await btn1.click();
                await page.waitForTimeout(1000);
                
                const step2Visible = await page.locator('#step2').isVisible();
                console.log(`   –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ 2: ${step2Visible ? '‚úÖ' : '‚ùå'}\n`);
                
                if (step2Visible) {
                    // –í–æ–ø—Ä–æ—Å 2
                    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ 2...');
                    const options2 = await page.locator('#step2 .option-card').all();
                    if (options2.length > 0) {
                        await options2[0].click();
                        await page.waitForTimeout(500);
                        
                        const btn2 = page.locator('#btn2');
                        await btn2.click();
                        await page.waitForTimeout(1000);
                        
                        const step3Visible = await page.locator('#step3').isVisible();
                        console.log(`   –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ 3: ${step3Visible ? '‚úÖ' : '‚ùå'}\n`);
                    }
                }
            } else {
                console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ö–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç\n');
            }
        } else {
            console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û–ø—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n');
        }
        
        console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:');
        const currentStep = await page.evaluate(() => {
            const steps = ['step1', 'step2', 'step3', 'step4', 'step5', 'step6', 'step7'];
            for (let step of steps) {
                const el = document.getElementById(step);
                if (el && el.classList.contains('active')) {
                    return step;
                }
            }
            return 'unknown';
        });
        console.log(`–¢–µ–∫—É—â–∏–π —à–∞–≥: ${currentStep}`);
        
        if (currentStep === 'step3' || currentStep === 'step4') {
            console.log('‚úÖ –ö–ù–û–ü–ö–ò –†–ê–ë–û–¢–ê–Æ–¢ –ü–†–ê–í–ò–õ–¨–ù–û');
        } else {
            console.log('‚ùå –ö–ù–û–ü–ö–ò –ù–ï –†–ê–ë–û–¢–ê–Æ–¢');
        }
        
        await page.waitForTimeout(3000);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await browser.close();
    }
}

testQuizButtons();
